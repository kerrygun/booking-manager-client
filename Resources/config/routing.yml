# NOTE: This file is auto generated by the openapi generator program.
# https://github.com/openapitools/openapi-generator
# Do not edit the class manually.

# booking
open_api_server_booking_adddocuent:
    path:     /addDocument/{itemType}
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.booking::addDocuentAction
    requirements:

open_api_server_booking_cancelreservation:
    path:     /reservation/{reservationId}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.booking::cancelReservationAction
    requirements:
        reservationId: '\d+'

open_api_server_booking_confirmreservation:
    path:     /reservation/{reservationId}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.booking::confirmReservationAction
    requirements:
        reservationId: '\d+'

open_api_server_booking_createreservation:
    path:     /reservation
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.booking::createReservationAction

open_api_server_booking_getavailability:
    path:     /availability/{year}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getAvailabilityAction
    requirements:
        year: '\d+'

open_api_server_booking_getbasebyid:
    path:     /base/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getBaseByIdAction
    requirements:
        id: '\d+'

open_api_server_booking_getbases:
    path:     /bases
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getBasesAction

open_api_server_booking_getcompanies:
    path:     /companies
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getCompaniesAction

open_api_server_booking_getcompanyby:
    path:     /company/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getCompanyByAction
    requirements:
        id: '\d+'

open_api_server_booking_getcountries:
    path:     /countries
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getCountriesAction

open_api_server_booking_getcountrybyid:
    path:     /country/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getCountryByIdAction
    requirements:
        id: '\d+'

open_api_server_booking_getequipment:
    path:     /equipment
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getEquipmentAction

open_api_server_booking_getoffers:
    path:     /offers
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getOffersAction

open_api_server_booking_getprices:
    path:     /prices
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getPricesAction

open_api_server_booking_getreservation:
    path:     /reservation/{reservationId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getReservationAction
    requirements:
        reservationId: '\d+'

open_api_server_booking_getreservations:
    path:     /reservations/{year}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getReservationsAction
    requirements:
        year: '\d+'

open_api_server_booking_getsailingareabyid:
    path:     /sailingArea/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getSailingAreaByIdAction
    requirements:
        id: '\d+'

open_api_server_booking_getsailingareas:
    path:     /sailingAreas
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getSailingAreasAction

open_api_server_booking_getshipyardbyid:
    path:     /shipyard/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getShipyardByIdAction
    requirements:
        id: '\d+'

open_api_server_booking_getshipyards:
    path:     /shipyards
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getShipyardsAction

open_api_server_booking_getshortavailability:
    path:     /shortAvailability/{year}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getShortAvailabilityAction
    requirements:
        year: '\d+'

open_api_server_booking_getspecialoffers:
    path:     /specialOffers
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getSpecialOffersAction

open_api_server_booking_getspecialoffersbytype:
    path:     /specialOffers/{offerType}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getSpecialOffersByTypeAction
    requirements:
        offerType: '[a-z0-9]+'

open_api_server_booking_getworldregionbyid:
    path:     /worldRegion/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getWorldRegionByIdAction
    requirements:
        id: '\d+'

open_api_server_booking_getworldregions:
    path:     /worldRegions
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getWorldRegionsAction

open_api_server_booking_getyachts:
    path:     /yachts
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getYachtsAction

open_api_server_booking_getyacthbyid:
    path:     /yacht/{id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.booking::getYacthByIdAction
    requirements:
        id: '\d+'

# invoice
open_api_server_invoice_getinvoices:
    path:     /invoices/{invoiceType}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.invoice::getInvoicesAction
    requirements:
        invoiceType: '\d+'

