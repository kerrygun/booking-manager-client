<?php
/**
 * CompanyTest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Tests\Model
 * @author   openapi-generator contributors
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Booking Manager API
 *
 * # Booking Manager API for Agencies and Charter Fleets  Booking Manager API is a standard Web service that enables clients to connect their data with external systems and services and to extend the automation benefits of the Booking Manager System. - It is used by charter agencies to publish availabilities of Charter Operators and automate booking processes by connecting Booking Manager to their own web sites to allow for seamless online booking experience for end users or integrating it with their CRM solutions in order to automate office procedures. - Charter operators use the web service to connect Booking Manager with their book keeping softwares and save time and effort in accounting department. - Third Party Software tools also use Booking Manager API to display richer information, for example boat tracking systems are able to visualise client contact information directly on the map showing the boat location in real time. ## Document Changes ### 29.05.2020 - `/companies` more information added in response - address, additional telephone and additional mobile number - `/offers` added `kind` parameter in the request - `/yachts` added `validForBases from/to` parameter to the response ### 10.04.2020   - `/yachts` added `shipyardId` parameter to the response - POST `/addDocument` - function to add document on specific item - `/offers` added `sailingAreaId` as additional parameter in request - PUT `/reservation` added `expirationDate` for options      ### 12.03.2020. - Extras valid for certain yacht in `/yachts` - `/yachts` function with extras duration parameter - `validDaysFrom`/`validDaysTo` - `/yachts` function with year of build `year`, default yacht deposit `deposit`, commision percentage `commissionPercentage` and default check in day `defaultCheckInDay` - `/yacht` field `lenghtAtWaterline` corrected to length
 *
 * The version of the OpenAPI document: 2.0.2
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Server\Model;

use PHPUnit\Framework\MockObject\MockObject;
use PHPUnit\Framework\TestCase;

/**
 * CompanyTest Class Doc Comment
 *
 * @category    Class
 * @description Company
 * @package     OpenAPI\Server\Tests\Model
 * @author      openapi-generator contributors
 * @link        https://github.com/openapitools/openapi-generator
 * @coversDefaultClass \OpenAPI\Server\Model\Company
 */
class CompanyTest extends TestCase
{
    protected Company|MockObject $object;

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
         $this->object = $this->getMockBuilder(Company::class)->getMockForAbstractClass();
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * @group integration
     * @small
     */
    public function testTestClassExists(): void
    {
        $this->assertTrue(class_exists(Company::class));
        $this->assertInstanceOf(Company::class, $this->object);
    }

    /**
     * Test attribute "id"
     *
     * @group unit
     * @small
     */
    public function testPropertyId(): void
    {
        $this->markTestSkipped('Test for property id not implemented');
    }

    /**
     * Test attribute "name"
     *
     * @group unit
     * @small
     */
    public function testPropertyName(): void
    {
        $this->markTestSkipped('Test for property name not implemented');
    }

    /**
     * Test attribute "address"
     *
     * @group unit
     * @small
     */
    public function testPropertyAddress(): void
    {
        $this->markTestSkipped('Test for property address not implemented');
    }

    /**
     * Test attribute "city"
     *
     * @group unit
     * @small
     */
    public function testPropertyCity(): void
    {
        $this->markTestSkipped('Test for property city not implemented');
    }

    /**
     * Test attribute "zip"
     *
     * @group unit
     * @small
     */
    public function testPropertyZip(): void
    {
        $this->markTestSkipped('Test for property zip not implemented');
    }

    /**
     * Test attribute "country"
     *
     * @group unit
     * @small
     */
    public function testPropertyCountry(): void
    {
        $this->markTestSkipped('Test for property country not implemented');
    }

    /**
     * Test attribute "telephone"
     *
     * @group unit
     * @small
     */
    public function testPropertyTelephone(): void
    {
        $this->markTestSkipped('Test for property telephone not implemented');
    }

    /**
     * Test attribute "telephone2"
     *
     * @group unit
     * @small
     */
    public function testPropertyTelephone2(): void
    {
        $this->markTestSkipped('Test for property telephone2 not implemented');
    }

    /**
     * Test attribute "mobile"
     *
     * @group unit
     * @small
     */
    public function testPropertyMobile(): void
    {
        $this->markTestSkipped('Test for property mobile not implemented');
    }

    /**
     * Test attribute "vatCode"
     *
     * @group unit
     * @small
     */
    public function testPropertyVatCode(): void
    {
        $this->markTestSkipped('Test for property vatCode not implemented');
    }

    /**
     * Test attribute "email"
     *
     * @group unit
     * @small
     */
    public function testPropertyEmail(): void
    {
        $this->markTestSkipped('Test for property email not implemented');
    }

    /**
     * Test attribute "web"
     *
     * @group unit
     * @small
     */
    public function testPropertyWeb(): void
    {
        $this->markTestSkipped('Test for property web not implemented');
    }

    /**
     * Test attribute "bankAccountNumber"
     *
     * @group unit
     * @small
     */
    public function testPropertyBankAccountNumber(): void
    {
        $this->markTestSkipped('Test for property bankAccountNumber not implemented');
    }

    /**
     * Test attribute "termsAndConditions"
     *
     * @group unit
     * @small
     */
    public function testPropertyTermsAndConditions(): void
    {
        $this->markTestSkipped('Test for property termsAndConditions not implemented');
    }
}
