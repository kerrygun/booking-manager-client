<?php
/**
 * BookingApiInterface
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Booking Manager API
 *
 * # Booking Manager API for Agencies and Charter Fleets  Booking Manager API is a standard Web service that enables clients to connect their data with external systems and services and to extend the automation benefits of the Booking Manager System. - It is used by charter agencies to publish availabilities of Charter Operators and automate booking processes by connecting Booking Manager to their own web sites to allow for seamless online booking experience for end users or integrating it with their CRM solutions in order to automate office procedures. - Charter operators use the web service to connect Booking Manager with their book keeping softwares and save time and effort in accounting department. - Third Party Software tools also use Booking Manager API to display richer information, for example boat tracking systems are able to visualise client contact information directly on the map showing the boat location in real time. ## Document Changes ### 29.05.2020 - `/companies` more information added in response - address, additional telephone and additional mobile number - `/offers` added `kind` parameter in the request - `/yachts` added `validForBases from/to` parameter to the response ### 10.04.2020   - `/yachts` added `shipyardId` parameter to the response - POST `/addDocument` - function to add document on specific item - `/offers` added `sailingAreaId` as additional parameter in request - PUT `/reservation` added `expirationDate` for options      ### 12.03.2020. - Extras valid for certain yacht in `/yachts` - `/yachts` function with extras duration parameter - `validDaysFrom`/`validDaysTo` - `/yachts` function with year of build `year`, default yacht deposit `deposit`, commision percentage `commissionPercentage` and default check in day `defaultCheckInDay` - `/yacht` field `lenghtAtWaterline` corrected to length
 *
 * The version of the OpenAPI document: 2.0.2
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\booking-manager-client;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\AvailabilityResponse;
use OpenAPI\Server\Model\Base;
use OpenAPI\Server\Model\Company;
use OpenAPI\Server\Model\Country;
use OpenAPI\Server\Model\DocumentResponse;
use OpenAPI\Server\Model\Equipment;
use OpenAPI\Server\Model\Flexibility;
use OpenAPI\Server\Model\ItemTypeEnum;
use OpenAPI\Server\Model\Offer;
use OpenAPI\Server\Model\Price;
use OpenAPI\Server\Model\ProductEnum;
use OpenAPI\Server\Model\Reservation;
use OpenAPI\Server\Model\ReservationResponse;
use OpenAPI\Server\Model\SailingArea;
use OpenAPI\Server\Model\Shipyard;
use OpenAPI\Server\Model\ShortAvailability;
use OpenAPI\Server\Model\WorldRegion;
use OpenAPI\Server\Model\Yacht;

/**
 * BookingApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\booking-manager-client
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface BookingApiInterface
{

    /**
     * Sets authentication method bearerAuth
     *
     * @param string|null $value Value of the bearerAuth authentication method.
     *
     * @return void
     */
    public function setbearerAuth(?string $value): void;

    /**
     * Operation addDocuent
     *
     * Add document
     *
     * @param   $itemType   (required)
     * @param  int $id  Entity id (required)
     * @param  string $description  Document description (required)
     * @param  UploadedFile|null $document   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function addDocuent($itemType, int $id, string $description, ?UploadedFile $document, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation cancelReservation
     *
     * Cancel reservation
     *
     * @param  int $reservationId  reservation id (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function cancelReservation(int $reservationId, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation confirmReservation
     *
     * Confirm reservation
     *
     * @param  int $reservationId  reservation id (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function confirmReservation(int $reservationId, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation createReservation
     *
     * Create reservation
     *
     * @param  Reservation $reservation  json object (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function createReservation(Reservation $reservation, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getAvailability
     *
     * Gets availability
     *
     * @param  int $year  specific year (required)
     * @param  int|null $companyId  company id (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getAvailability(int $year, ?int $companyId, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getBaseById
     *
     * Gets a specific base
     *
     * @param  int $id  entity id (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getBaseById(int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getBases
     *
     * Provides a list of bases
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getBases(int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getCompanies
     *
     * Provides a list of companies
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getCompanies(int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getCompanyBy
     *
     * Gets a specific company
     *
     * @param  int $id  entity id (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getCompanyBy(int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getCountries
     *
     * Provides a list of countries
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getCountries(int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getCountryById
     *
     * Gets a specific country
     *
     * @param  int $id  entity id (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getCountryById(int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getEquipment
     *
     * Provides a list of equipment categories
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getEquipment(int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getOffers
     *
     * Provides a list of available offers
     *
     * @param  \DateTime $dateFrom  date format&amp;#58; yyyy-MM-ddTHH:mm:ss (required)
     * @param  \DateTime $dateTo  date format&amp;#58; yyyy-MM-ddTHH:mm:ss (required)
     * @param  |null $flexibility  &#x60;1&#x60; - on day &#x60;2&#x60; - in week &#x60;3&#x60; - one week &#x60;4&#x60; - two weeks &#x60;5&#x60; - in month &#x60;6&#x60; - in year (optional)
     * @param  array|null $companyId  company ids (optional)
     * @param  array|null $country  countries (optional)
     * @param  |null $productName  product name (optional)
     * @param  array|null $baseFromId  base from ids (optional)
     * @param  array|null $baseToId  base to ids (optional)
     * @param  array|null $sailingAreaId  sailing area ids (optional)
     * @param  array|null $yachtId  yacht ids (optional)
     * @param  array|null $modelId  model ids (optional)
     * @param  string|null $currency  currency (optional)
     * @param  array|null $tripDuration  one or more trip durations (optional)
     * @param  int|null $minCabins  minimum number of cabins (optional)
     * @param  int|null $maxCabins  maximum number of cabins (optional)
     * @param  int|null $minBerths  minimum number of berths (optional)
     * @param  int|null $maxBerths  maximum number of berths (optional)
     * @param  int|null $minHeads  minimum number of heads (optional)
     * @param  int|null $maxHeads  maximum number of heads (optional)
     * @param  float|null $minLength  minimum length (optional)
     * @param  float|null $maxLength  maximum length (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getOffers(\DateTime $dateFrom, \DateTime $dateTo, ?$flexibility, ?array $companyId, ?array $country, ?$productName, ?array $baseFromId, ?array $baseToId, ?array $sailingAreaId, ?array $yachtId, ?array $modelId, ?string $currency, ?array $tripDuration, ?int $minCabins, ?int $maxCabins, ?int $minBerths, ?int $maxBerths, ?int $minHeads, ?int $maxHeads, ?float $minLength, ?float $maxLength, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getPrices
     *
     * Provides a list of yacht prices
     *
     * @param  \DateTime $dateFrom  date format&amp;#58; yyyy-MM-ddTHH:mm:ss (required)
     * @param  \DateTime $dateTo  date format&amp;#58; yyyy-MM-ddTHH:mm:ss (required)
     * @param  array|null $companyId  company ids (optional)
     * @param  array|null $country  countries (optional)
     * @param  |null $productName  product name (optional)
     * @param  array|null $yachtId  yacht ids (optional)
     * @param  string|null $currency  currency (optional)
     * @param  array|null $tripDuration  one or more trip durations (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPrices(\DateTime $dateFrom, \DateTime $dateTo, ?array $companyId, ?array $country, ?$productName, ?array $yachtId, ?string $currency, ?array $tripDuration, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getReservation
     *
     * Get reservation
     *
     * @param  int $reservationId  reservation id (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getReservation(int $reservationId, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getReservations
     *
     * Retrieves all reservations, including cancelled reservations
     *
     * @param  int $year  specific year (required)
     * @param  int|null $status  Retrieves bookings with the entered status. If parameter is not entered, all reservations will be retrieved, including canceled ones. (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getReservations(int $year, ?int $status, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getSailingAreaById
     *
     * Gets a specific sailing area
     *
     * @param  int $id  entity id (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSailingAreaById(int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getSailingAreas
     *
     * Provides a list of sailing areas
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSailingAreas(int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getShipyardById
     *
     * Gets a specific shipyard
     *
     * @param  int $id  entity id (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getShipyardById(int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getShipyards
     *
     * Provides a list of shipyards
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getShipyards(int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getShortAvailability
     *
     * Gets shortAvailability
     *
     * @param  int $year  specific year (required)
     * @param  int|null $companyId  company id (optional)
     * @param  int|null $yachtId  yacht id (optional)
     * @param  int|null $format  &#x60;1&#x60; - binary &#x60;2&#x60; - hex &#x60;3&#x60; - status (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getShortAvailability(int $year, ?int $companyId, ?int $yachtId, ?int $format, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getSpecialOffers
     *
     * Provides a list of special offers
     *
     * @param  \DateTime $dateFrom  date format&amp;#58; yyyy-MM-ddTHH:mm:ss (required)
     * @param  |null $flexibility  &#x60;1&#x60; - on day &#x60;2&#x60; - in week &#x60;3&#x60; - one week &#x60;4&#x60; - two weeks &#x60;5&#x60; - in month &#x60;6&#x60; - in year (optional)
     * @param  array|null $companyId  company ids (optional)
     * @param  array|null $country  countries (optional)
     * @param  |null $productName  product name (optional)
     * @param  array|null $baseFromId  base from ids (optional)
     * @param  array|null $baseToId  base to ids (optional)
     * @param  array|null $yachtId  yacht ids (optional)
     * @param  array|null $modelId  model ids (optional)
     * @param  string|null $currency  currency (optional)
     * @param  array|null $tripDuration  one or more trip durations (optional)
     * @param  int|null $minCabins  minimum number of cabins (optional)
     * @param  int|null $maxCabins  maximum number of cabins (optional)
     * @param  int|null $minBerths  minimum number of berths (optional)
     * @param  int|null $maxBerths  maximum number of berths (optional)
     * @param  int|null $minHeads  minimum number of heads (optional)
     * @param  int|null $maxHeads  maximum number of heads (optional)
     * @param  float|null $minLength  minimum length (optional)
     * @param  float|null $maxLength  maximum length (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSpecialOffers(\DateTime $dateFrom, ?$flexibility, ?array $companyId, ?array $country, ?$productName, ?array $baseFromId, ?array $baseToId, ?array $yachtId, ?array $modelId, ?string $currency, ?array $tripDuration, ?int $minCabins, ?int $maxCabins, ?int $minBerths, ?int $maxBerths, ?int $minHeads, ?int $maxHeads, ?float $minLength, ?float $maxLength, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getSpecialOffersByType
     *
     * Provides a list of special offers
     *
     * @param  string $offerType  offer type (required)
     * @param  \DateTime $dateFrom  date format&amp;#58; yyyy-MM-ddTHH:mm:ss (required)
     * @param  |null $flexibility  &#x60;1&#x60; - on day &#x60;2&#x60; - in week &#x60;3&#x60; - one week &#x60;4&#x60; - two weeks &#x60;5&#x60; - in month &#x60;6&#x60; - in year (optional)
     * @param  array|null $companyId  company ids (optional)
     * @param  array|null $country  countries (optional)
     * @param  |null $productName  product name (optional)
     * @param  array|null $baseFromId  base from ids (optional)
     * @param  array|null $baseToId  base to ids (optional)
     * @param  array|null $sailingAreaId  sailing area ids (optional)
     * @param  array|null $yachtId  yacht ids (optional)
     * @param  array|null $modelId  model ids (optional)
     * @param  string|null $currency  currency (optional)
     * @param  array|null $tripDuration  one or more trip durations (optional)
     * @param  int|null $minCabins  minimum number of cabins (optional)
     * @param  int|null $maxCabins  maximum number of cabins (optional)
     * @param  int|null $minBerths  minimum number of berths (optional)
     * @param  int|null $maxBerths  maximum number of berths (optional)
     * @param  int|null $minHeads  minimum number of heads (optional)
     * @param  int|null $maxHeads  maximum number of heads (optional)
     * @param  float|null $minLength  minimum length (optional)
     * @param  float|null $maxLength  maximum length (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSpecialOffersByType(string $offerType, \DateTime $dateFrom, ?$flexibility, ?array $companyId, ?array $country, ?$productName, ?array $baseFromId, ?array $baseToId, ?array $sailingAreaId, ?array $yachtId, ?array $modelId, ?string $currency, ?array $tripDuration, ?int $minCabins, ?int $maxCabins, ?int $minBerths, ?int $maxBerths, ?int $minHeads, ?int $maxHeads, ?float $minLength, ?float $maxLength, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getWorldRegionById
     *
     * Gets a specific world region
     *
     * @param  int $id  entity id (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getWorldRegionById(int $id, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getWorldRegions
     *
     * Provides a list of world regions
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getWorldRegions(int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getYachts
     *
     * Provides a list of yachts
     *
     * @param  int|null $companyId  company id (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getYachts(?int $companyId, int &$responseCode, array &$responseHeaders): array|object|null;


    /**
     * Operation getYacthById
     *
     * Gets a specific yacht
     *
     * @param  int $id  entity id (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getYacthById(int $id, int &$responseCode, array &$responseHeaders): array|object|null;

}
